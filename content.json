[{"title":"大前端学习路线","date":"2018-06-04T02:26:00.000Z","path":"2018/06/04/大前端学习路线/","text":"以下的前端学习路线来自互联网 第一阶段：HTML+CSS:HTML进阶、CSS进阶、div+css布局、HTML+css整站开发、 JavaScript基础：Js基础教程、js内置对象常用方法、常见DOM树操作大全、ECMAscript、DOM、BOM、定时器和焦点图。 JS基本特效：常见特效、例如：tab、导航、整页滚动、轮播图、JS制作幻灯片、弹出层、手风琴菜单、瀑布流布局、滚动事件、滚差视图。 JS高级特征：正则表达式、排序算法、递归算法、闭包、函数节流、作用域链、基于距离运动框架、面向对象基础、 JQuery：基础使用悬着器、DOM操作、特效和动画、方法链、拖拽、变形、JQueryUI组件基本使用。 第二阶段：HTML5和移动Web开发HTML5：HTML5新语义标签、HTML5表单、音频和视频、离线和本地存储、SVG、Web Socket、Canvas. CSS3:CSS3新选择器、伪元素、脸色表示法、边框、阴影、background系列属性改变、Transition、动画、景深和深透、3D效果制作、Velocity.js框架、元素进场、出场策略、炫酷CSS3网页制作。 Bootstrap:响应式概念、媒体查询、响应式网站制作、删格系统、删格系统原理、Bootstrap常用模板、LESS和SASS。 移动Web开发：跨终端WEB和主流设备简介、视口、流式布局、弹性盒子、rem、移动终端JavaScript事件、手机中常见JS效果制作、Zepto.js、手机聚划算页面、手机滚屏。 第三阶段：HTTP服务和AJAX编程WEB服务器基础：服务器基础知识、Apache服务器和其他WEB服务器介绍、Apache服务器搭建、HTTP介绍。 PHP基础：PHP基础语法、使用PHP处理简单的GET或者POST请求、 AJAX上篇：Ajax简介和异步的概念、Ajax框架的封装、XMLHttpRequest对象详细介绍方法、兼容性处理方法、Ajax框架的封装、Ajax中缓存问题、XML介绍和使用。 AJAX下篇：JSON和JSON解析、数据绑定和模板技术、JSONP、跨域技术、图片预读取和lazy-load技术、JQuery框架中的AjaxAPI、使用Ajax实现爆布流案例额。 第四阶段：面向对象进阶面向对象终极篇：从内存角度到理解JS面向对象、基本类型、复杂类型、原型链、ES6中的面向对象、属性读写权限、设置器、访问器。 面向对象三大特征：继承性、多态性、封装性、接口。 设计模式：面向对象编程思维、单例模式、工厂模式、策略模式、观察者模式、模板方法模式、代理模式、装饰者模式、适配器模式、面向切面编程。 第五阶段：封装一个属于自己的框架框架封装基础：事件流、冒泡、捕获、事件对象、事件框架、选择框架。 框架封装中级：运动原理、单物体运动框架、多物体运动框架、运动框架面向对象封装。 框架封装高级和补充：JQuery框架雏形、可扩展性、模块化、封装属于传智自己的框架。 第六阶段：模块化组件开发面向组件编程：面向组件编程的方式、面向组件编程的实现原理、面向组件编程实战、基于组件化思想开发网站应用程序。 面向模块编程：AMD设计规范、CMD设计规范、RequireJS，LoadJS、淘宝的SeaJS。 第七阶段：主流的流行框架Web开发工作流：GIT/SVN、Yeoman脚手架、NPM/Bower依赖管理工具、Grunt/Gulp/Webpack。 MVC/MVVM/MVW框架：Angular.js、Backbone.js、Knockout/Ember。 常用库：React.js、Vue.js、Zepto.js。 第八阶段：HTML5原生移动应用开发Cordova：WebApp/NativeApp/HybirdApp简介、Cordova简介、与PhoneGap之间的关系、开发环境搭建、Cordova实战（创建项目，配置，编译，调试，部署发布）。 Ionic：Ionic简介和同类对比、模板项目解析、常见组件及使用、结合Angular构建APP、常见效果（下拉刷新，上拉加载，侧滑导航，选项卡）。 React Native：React Native简介、React Native环境配置、创建项目，配置，编译，调试，部署发布、原生模块和UI组件、原生常用API。 HTML5+：HTML5+中国产业联盟、HTML5 Plus Runtime环境、HBuilder开发工具、MUI框架、H5+开发和部署。 第九阶段： Node.js全栈开发：快速入门：Node.js发展、生态圈、Io.js、Linux/Windows/OS X环境配置、REPL环境和控制台程序、异步编程，非阻塞I/O、模块概念，模块管理工具、开发流程，调试，测试。 核心模块和对象：全局对象global，process，console，util、事件驱动，事件发射器、加密解密，路径操作，序列化和反序列化、文件流操作、HTTP服务端与客户端、Socket.IO。 Web开发基础：HTTP协议，请求响应处理过程、关系型数据库操作和数据访问、非关系型数据库操作和数据访问、原生的Node.js开发Web应用程序、Web开发工作流、Node.js开发Blog案例。 快速开发框架：Express简介+MVC简介、Express常用API、Express路由模块、Jade/Ejs模板引擎、使用Express重构Blog案例、Koa等其他常见MVC框架。 Node.js开发电子商务实战：需求与设计、账户模块注册登录、会员中心模块、前台展示模块、购物车，订单结算、在线客服即时通讯模块。","tags":[{"name":"学习计划","slug":"学习计划","permalink":"http://yoursite.com/tags/学习计划/"}]},{"title":"markdown 编辑器选择","date":"2018-02-02T02:58:54.000Z","path":"2018/02/02/markdown-编辑器选择/","text":"markdown虽然可以用普通的文本编辑器去编辑，但是普通编辑器只可以去编辑，而不能实时预览。对于经验丰富的大佬来说，windows自带的记事本已经可以通吃一切了，而对于刚上手的小白来说，不能实时预览，是一件很痛苦的事情因此，在学习markdown的开端，我们需要找一款可以支持实时预览功能的编辑器，或者给支持markdown插件的编辑器装上对应的插件。 首先声明由于我手上没有OSX的设备，虽然安装了deepin，但是因为字体渲染的问题（一点强迫症，觉得deepin的字体没有windows看着舒服），一直没有去长期使用。所以我在编辑器的选择里，仅限于windows环境下。 一、Typora其实这个编辑器是我使用最少的，但是为什么要放在第一个说呢？因为它实在是非常好看啊。Typora支持windows，osx，linux 优点 颜值高，Typora的界面非常简洁，在系统原生界面下和windows的记事本风格几乎完全一致，而在一体化界面下，几乎是一块白色的正方形。 即写及得，Typora和大多数markdown编辑器不一样的地方，在于它和传统编辑器一样是单页面，当时用markdown语法写完一句话时，将会自动按语法显示 有5个可选主题，包括夜间主题 缺点 对于新手来说有一定的挑战性，不利于新手学习。比如我要学习使用markdown，我是去找别人写好的文档，用markdown编辑器打开，左边看他的语法，右边看该语法的实际显示效果，显然，markdown没有这种特性。 二、有道云笔记我还是比较喜欢有道云笔记的，一般来说，带个云字的，都意味着在数据会存储在云端，我们可以随时随地，用各种设备去操作我们的数据 优点 强大的云端同步功能，在pc端可以做到实时同步，也就是敲一个字，或者删一个字，会自动在云端同步。不过手机好像不支持实时同步的特性 多客户端支持，pc、手机、pad。这就意味着随时随地都可以写点什么。 可以实时协作，反正我没用过。。。之前使用别的平台实时协作，就是多个账号同步写同一个文档，每个人的屏幕都会实时显示谁在做什么操作。有机会试试有道云的实时协作。 缺点 有广告，但是会员可以免广告 界面相对于typora来说，简直太复杂了 三、webstorm自带的插件这个是用的最多的，界面没有别的两个好看，很朴素，仅仅是按照插件之后，在md文件的编辑页面，多了一个预览页 优点 插件的形式，我们不需要安装独立的编辑器 强大的webstorm自带版本控制，通过配置好的git，可以很方便的发布版本，将项目提交的github，数据极其安全。同时可以随时回到之前版本，以及比较两个版本的区别 缺点 在webstorm界面显示的时候，一行字不能自动换行 界面不如前两个好看 嗯，目前就使用了这三个，算是未完待续吧。。。","tags":[{"name":"markdown","slug":"markdown","permalink":"http://yoursite.com/tags/markdown/"}]}]