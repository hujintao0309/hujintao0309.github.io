<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>大前端学习路线</title>
      <link href="undefined2018/06/04/%E5%A4%A7%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
      <url>2018/06/04/%E5%A4%A7%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<p>以下的前端学习路线来自互联网</p><a id="more"></a><h2 id="第一阶段："><a href="#第一阶段：" class="headerlink" title="第一阶段："></a>第一阶段：</h2><h3 id="HTML-CSS"><a href="#HTML-CSS" class="headerlink" title="HTML+CSS:"></a>HTML+CSS:</h3><p>HTML进阶、CSS进阶、div+css布局、HTML+css整站开发、</p><h3 id="JavaScript基础："><a href="#JavaScript基础：" class="headerlink" title="JavaScript基础："></a>JavaScript基础：</h3><p>Js基础教程、js内置对象常用方法、常见DOM树操作大全、ECMAscript、DOM、BOM、定时器和焦点图。</p><h3 id="JS基本特效："><a href="#JS基本特效：" class="headerlink" title="JS基本特效："></a>JS基本特效：</h3><p>常见特效、例如：tab、导航、整页滚动、轮播图、JS制作幻灯片、弹出层、手风琴菜单、瀑布流布局、滚动事件、滚差视图。</p><h3 id="JS高级特征："><a href="#JS高级特征：" class="headerlink" title="JS高级特征："></a>JS高级特征：</h3><p>正则表达式、排序算法、递归算法、闭包、函数节流、作用域链、基于距离运动框架、面向对象基础、</p><h3 id="JQuery：基础使用"><a href="#JQuery：基础使用" class="headerlink" title="JQuery：基础使用"></a>JQuery：基础使用</h3><p>悬着器、DOM操作、特效和动画、方法链、拖拽、变形、JQueryUI组件基本使用。</p><h2 id="第二阶段：HTML5和移动Web开发"><a href="#第二阶段：HTML5和移动Web开发" class="headerlink" title="第二阶段：HTML5和移动Web开发"></a>第二阶段：HTML5和移动Web开发</h2><h3 id="HTML5："><a href="#HTML5：" class="headerlink" title="HTML5："></a>HTML5：</h3><p>HTML5新语义标签、HTML5表单、音频和视频、离线和本地存储、SVG、Web Socket、Canvas.</p><h3 id="CSS3"><a href="#CSS3" class="headerlink" title="CSS3:"></a>CSS3:</h3><p>CSS3新选择器、伪元素、脸色表示法、边框、阴影、background系列属性改变、Transition、动画、景深和深透、3D效果制作、Velocity.js框架、元素进场、出场策略、炫酷CSS3网页制作。</p><h3 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap:"></a>Bootstrap:</h3><p>响应式概念、媒体查询、响应式网站制作、删格系统、删格系统原理、Bootstrap常用模板、LESS和SASS。</p><h3 id="移动Web开发："><a href="#移动Web开发：" class="headerlink" title="移动Web开发："></a>移动Web开发：</h3><p>跨终端WEB和主流设备简介、视口、流式布局、弹性盒子、rem、移动终端JavaScript事件、手机中常见JS效果制作、Zepto.js、手机聚划算页面、手机滚屏。</p><h2 id="第三阶段：HTTP服务和AJAX编程"><a href="#第三阶段：HTTP服务和AJAX编程" class="headerlink" title="第三阶段：HTTP服务和AJAX编程"></a>第三阶段：HTTP服务和AJAX编程</h2><h3 id="WEB服务器基础："><a href="#WEB服务器基础：" class="headerlink" title="WEB服务器基础："></a>WEB服务器基础：</h3><p>服务器基础知识、Apache服务器和其他WEB服务器介绍、Apache服务器搭建、HTTP介绍。</p><h3 id="PHP基础："><a href="#PHP基础：" class="headerlink" title="PHP基础："></a>PHP基础：</h3><p>PHP基础语法、使用PHP处理简单的GET或者POST请求、</p><h3 id="AJAX上篇："><a href="#AJAX上篇：" class="headerlink" title="AJAX上篇："></a>AJAX上篇：</h3><p>Ajax简介和异步的概念、Ajax框架的封装、XMLHttpRequest对象详细介绍方法、兼容性处理方法、Ajax框架的封装、Ajax中缓存问题、XML介绍和使用。</p><h3 id="AJAX下篇："><a href="#AJAX下篇：" class="headerlink" title="AJAX下篇："></a>AJAX下篇：</h3><p>JSON和JSON解析、数据绑定和模板技术、JSONP、跨域技术、图片预读取和lazy-load技术、JQuery框架中的AjaxAPI、使用Ajax实现爆布流案例额。</p><h2 id="第四阶段：面向对象进阶"><a href="#第四阶段：面向对象进阶" class="headerlink" title="第四阶段：面向对象进阶"></a>第四阶段：面向对象进阶</h2><h3 id="面向对象终极篇："><a href="#面向对象终极篇：" class="headerlink" title="面向对象终极篇："></a>面向对象终极篇：</h3><p>从内存角度到理解JS面向对象、基本类型、复杂类型、原型链、ES6中的面向对象、属性读写权限、设置器、访问器。</p><h3 id="面向对象三大特征："><a href="#面向对象三大特征：" class="headerlink" title="面向对象三大特征："></a>面向对象三大特征：</h3><p>继承性、多态性、封装性、接口。</p><h3 id="设计模式："><a href="#设计模式：" class="headerlink" title="设计模式："></a>设计模式：</h3><p>面向对象编程思维、单例模式、工厂模式、策略模式、观察者模式、模板方法模式、代理模式、装饰者模式、适配器模式、面向切面编程。</p><h2 id="第五阶段：封装一个属于自己的框架"><a href="#第五阶段：封装一个属于自己的框架" class="headerlink" title="第五阶段：封装一个属于自己的框架"></a>第五阶段：封装一个属于自己的框架</h2><h3 id="框架封装基础："><a href="#框架封装基础：" class="headerlink" title="框架封装基础："></a>框架封装基础：</h3><p>事件流、冒泡、捕获、事件对象、事件框架、选择框架。</p><h3 id="框架封装中级："><a href="#框架封装中级：" class="headerlink" title="框架封装中级："></a>框架封装中级：</h3><p>运动原理、单物体运动框架、多物体运动框架、运动框架面向对象封装。</p><h3 id="框架封装高级和补充："><a href="#框架封装高级和补充：" class="headerlink" title="框架封装高级和补充："></a>框架封装高级和补充：</h3><p>JQuery框架雏形、可扩展性、模块化、封装属于传智自己的框架。</p><h2 id="第六阶段：模块化组件开发"><a href="#第六阶段：模块化组件开发" class="headerlink" title="第六阶段：模块化组件开发"></a>第六阶段：模块化组件开发</h2><h3 id="面向组件编程："><a href="#面向组件编程：" class="headerlink" title="面向组件编程："></a>面向组件编程：</h3><p>面向组件编程的方式、面向组件编程的实现原理、面向组件编程实战、基于组件化思想开发网站应用程序。</p><h3 id="面向模块编程："><a href="#面向模块编程：" class="headerlink" title="面向模块编程："></a>面向模块编程：</h3><p>AMD设计规范、CMD设计规范、RequireJS，LoadJS、淘宝的SeaJS。</p><h2 id="第七阶段：主流的流行框架"><a href="#第七阶段：主流的流行框架" class="headerlink" title="第七阶段：主流的流行框架"></a>第七阶段：主流的流行框架</h2><h3 id="Web开发工作流："><a href="#Web开发工作流：" class="headerlink" title="Web开发工作流："></a>Web开发工作流：</h3><p>GIT/SVN、Yeoman脚手架、NPM/Bower依赖管理工具、Grunt/Gulp/Webpack。</p><h3 id="MVC-MVVM-MVW框架："><a href="#MVC-MVVM-MVW框架：" class="headerlink" title="MVC/MVVM/MVW框架："></a>MVC/MVVM/MVW框架：</h3><p>Angular.js、Backbone.js、Knockout/Ember。</p><h3 id="常用库："><a href="#常用库：" class="headerlink" title="常用库："></a>常用库：</h3><p>React.js、Vue.js、Zepto.js。</p><h2 id="第八阶段：HTML5原生移动应用开发"><a href="#第八阶段：HTML5原生移动应用开发" class="headerlink" title="第八阶段：HTML5原生移动应用开发"></a>第八阶段：HTML5原生移动应用开发</h2><h3 id="Cordova："><a href="#Cordova：" class="headerlink" title="Cordova："></a>Cordova：</h3><p>WebApp/NativeApp/HybirdApp简介、Cordova简介、与PhoneGap之间的关系、开发环境搭建、Cordova实战（创建项目，配置，编译，调试，部署发布）。</p><h3 id="Ionic："><a href="#Ionic：" class="headerlink" title="Ionic："></a>Ionic：</h3><p>Ionic简介和同类对比、模板项目解析、常见组件及使用、结合Angular构建APP、常见效果（下拉刷新，上拉加载，侧滑导航，选项卡）。</p><h3 id="React-Native："><a href="#React-Native：" class="headerlink" title="React Native："></a>React Native：</h3><p>React Native简介、React Native环境配置、创建项目，配置，编译，调试，部署发布、原生模块和UI组件、原生常用API。</p><h3 id="HTML5-："><a href="#HTML5-：" class="headerlink" title="HTML5+："></a>HTML5+：</h3><p>HTML5+中国产业联盟、HTML5 Plus Runtime环境、HBuilder开发工具、MUI框架、H5+开发和部署。</p><h2 id="第九阶段：-Node-js全栈开发："><a href="#第九阶段：-Node-js全栈开发：" class="headerlink" title="第九阶段：   Node.js全栈开发："></a>第九阶段：   Node.js全栈开发：</h2><h3 id="快速入门："><a href="#快速入门：" class="headerlink" title="快速入门："></a>快速入门：</h3><p>Node.js发展、生态圈、Io.js、Linux/Windows/OS X环境配置、REPL环境和控制台程序、异步编程，非阻塞I/O、模块概念，模块管理工具、开发流程，调试，测试。</p><h3 id="核心模块和对象："><a href="#核心模块和对象：" class="headerlink" title="核心模块和对象："></a>核心模块和对象：</h3><p>全局对象global，process，console，util、事件驱动，事件发射器、加密解密，路径操作，序列化和反序列化、文件流操作、HTTP服务端与客户端、Socket.IO。</p><h3 id="Web开发基础："><a href="#Web开发基础：" class="headerlink" title="Web开发基础："></a>Web开发基础：</h3><p>HTTP协议，请求响应处理过程、关系型数据库操作和数据访问、非关系型数据库操作和数据访问、原生的Node.js开发Web应用程序、Web开发工作流、Node.js开发Blog案例。</p><h3 id="快速开发框架："><a href="#快速开发框架：" class="headerlink" title="快速开发框架："></a>快速开发框架：</h3><p>Express简介+MVC简介、Express常用API、Express路由模块、Jade/Ejs模板引擎、使用Express重构Blog案例、Koa等其他常见MVC框架。</p><h3 id="Node-js开发电子商务实战："><a href="#Node-js开发电子商务实战：" class="headerlink" title="Node.js开发电子商务实战："></a>Node.js开发电子商务实战：</h3><p>需求与设计、账户模块注册登录、会员中心模块、前台展示模块、购物车，订单结算、在线客服即时通讯模块。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习计划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown 编辑器选择</title>
      <link href="undefined2018/02/02/markdown-%E7%BC%96%E8%BE%91%E5%99%A8%E9%80%89%E6%8B%A9/"/>
      <url>2018/02/02/markdown-%E7%BC%96%E8%BE%91%E5%99%A8%E9%80%89%E6%8B%A9/</url>
      
        <content type="html"><![CDATA[<p>markdown虽然可以用普通的文本编辑器去编辑，但是普通编辑器只可以去编辑，而不能实时预览。<br>对于经验丰富的大佬来说，windows自带的记事本已经可以通吃一切了，而对于刚上手的小白来说，不能实时预览，是一件很痛苦的事情<br>因此，在学习markdown的开端，我们需要找一款可以支持实时预览功能的编辑器，或者给支持markdown插件的编辑器装上对应的插件。</p><a id="more"></a><hr><h2 id="首先声明"><a href="#首先声明" class="headerlink" title="首先声明"></a>首先声明</h2><p>由于我手上没有OSX的设备，虽然安装了deepin，但是因为字体渲染的问题（一点强迫症，觉得deepin的字体没有windows看着舒服），一直没有去长期使用。<br>所以我在编辑器的选择里，仅限于windows环境下。</p><h2 id="一、Typora"><a href="#一、Typora" class="headerlink" title="一、Typora"></a>一、Typora</h2><p>其实这个编辑器是我使用最少的，但是为什么要放在第一个说呢？因为它实在是非常好看啊。<br>Typora支持windows，osx，linux</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ol><li>颜值高，Typora的界面非常简洁，在系统原生界面下和windows的记事本风格几乎完全一致，而在一体化界面下，几乎是一块白色的正方形。</li><li>即写及得，Typora和大多数markdown编辑器不一样的地方，在于它和传统编辑器一样是单页面，当时用markdown语法写完一句话时，将会自动按语法显示</li><li>有5个可选主题，包括夜间主题 </li></ol><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ol><li>对于新手来说有一定的挑战性，不利于新手学习。比如我要学习使用markdown，我是去找别人写好的文档，用markdown编辑器打开，左边看他的语法，右边看该语法的实际显示效果，显然，markdown没有这种特性。</li></ol><p><img src="https://github.com/hujintao0309/MarkDownPhotos/raw/master/%E6%88%AA%E5%9B%BE%E7%B1%BB/typora.JPG" alt></p><h2 id="二、有道云笔记"><a href="#二、有道云笔记" class="headerlink" title="二、有道云笔记"></a>二、有道云笔记</h2><p>我还是比较喜欢有道云笔记的，一般来说，带个云字的，都意味着在数据会存储在云端，我们可以随时随地，用各种设备去操作我们的数据</p><h3 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h3><ol><li>强大的云端同步功能，在pc端可以做到实时同步，也就是敲一个字，或者删一个字，会自动在云端同步。不过手机好像不支持实时同步的特性</li><li>多客户端支持，pc、手机、pad。这就意味着随时随地都可以写点什么。</li><li>可以实时协作，反正我没用过。。。之前使用别的平台实时协作，就是多个账号同步写同一个文档，每个人的屏幕都会实时显示谁在做什么操作。有机会试试有道云的实时协作。</li></ol><h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><ol><li>有广告，但是会员可以免广告</li><li>界面相对于typora来说，简直太复杂了</li></ol><p><img src="https://github.com/hujintao0309/MarkDownPhotos/raw/master/%E6%88%AA%E5%9B%BE%E7%B1%BB/youdao.JPG" alt></p><h2 id="三、webstorm自带的插件"><a href="#三、webstorm自带的插件" class="headerlink" title="三、webstorm自带的插件"></a>三、webstorm自带的插件</h2><p>这个是用的最多的，界面没有别的两个好看，很朴素，仅仅是按照插件之后，在md文件的编辑页面，多了一个预览页</p><h3 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h3><ol><li>插件的形式，我们不需要安装独立的编辑器</li><li>强大的webstorm自带版本控制，通过配置好的git，可以很方便的发布版本，将项目提交的github，数据极其安全。同时可以随时回到之前版本，以及比较两个版本的区别</li></ol><h3 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h3><ol><li>在webstorm界面显示的时候，一行字不能自动换行</li><li>界面不如前两个好看</li></ol><p><img src="https://github.com/hujintao0309/MarkDownPhotos/raw/master/%E6%88%AA%E5%9B%BE%E7%B1%BB/webstrom.JPG" alt></p><hr><p>嗯，目前就使用了这三个，算是未完待续吧。。。</p>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>